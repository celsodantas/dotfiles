# use vim key bindings
setw -g mode-keys vi
set -g status-keys vi

# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# start window index at 1
set -g base-index 1

# re-number windows when one is closed
set -g renumber-windows on

set-option -g history-limit 1000000

# powerline setup
set-option -g status-bg colour235
set-option -g status on
set-option -g status-interval 1
#set-option -g status-utf8 on
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
#set-option -g status-left "#(~/dotfiles/bundle/powerline/powerline/bindings/zsh/powerline.sh left)"
set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold]'
#set-option -g status-right ""#(~/dotfiles/bundle/powerline/powerline/bindings/zsh/powerline.sh rgith)"

#set-window-option -g window-status-current-format "#[fg=colour24, bg=colour235][fg=colour255, bg=colour24] #I | #W #[fg=colour24, bg=colour235]
#set-window-option -g window-status-format "#[fg=colour251, bg=colour235] #I|#W "
set -g window-status-format "#[fg=colour244,bg=colour234]#I #[fg=colour231]#W "
set -g window-status-current-format "#[fg=colour234,bg=colour31] #I #[fg=colour230,bold]#W "

# set -g window-status-format         '#I:#W#F'
# set -g window-status-current-format '#[bg=colour245,fg=black]#I:#W '

# Unbid % to split window
# Now - split horizontal and | vertical
unbind %
bind | split-window -h
unbind '"'
bind - split-window -v

# remop prefix to ctrl+a
set -g prefix C-a
# unmap default prefix ctrl+b
bind C-a send-prefix
unbind C-b

# removing this so I can ctrl-a ctrl-a to move cursos to begining of line on the terminal
# bind C-a last-window

# Vim style panel switch
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D 
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

bind-key R source-file ~/.tmux.conf; display "Configuration reloaded"

#bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
#bind-key -T copy-mode-vi PPage send-keys -X page-up
#bind-key -T copy-mode-vi NPage send-keys -X page-down

set -g mouse on

#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
#bind -n WheelDownPane select-pane -t= \; send-keys -M

#unbind-key -T copy-mode-vi MouseDragEnd1Pane # allows selecting something with the mouse and not leaving copy-mode immediately

#bind-key -T copy-mode-vi WheelUpPane send-keys -X halfpage-up
#bind-key -T copy-mode-vi WheelDownPane send-keys -X halfpage-down


# Use v to trigger selection    
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Use y to yank current selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"


#######t#
# PLUGINS

#set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'nhdaly/tmux-better-mouse-mode' # improves mouse scrolling

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
#run -b '~/.tmux/plugins/tpm/tpm'
